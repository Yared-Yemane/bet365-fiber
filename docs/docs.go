// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "yaredyemane1@gmail.com"
        },
        "license": {
            "name": "Yared Yemane"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/evaluate": {
            "post": {
                "description": "Evaluates a specific betting selection against the match results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Evaluation"
                ],
                "summary": "Evaluate a betting selection",
                "parameters": [
                    {
                        "description": "Bet selection to evaluate",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BetEvaluationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Evaluation result with outcome",
                        "schema": {
                            "$ref": "#/definitions/models.EvaluationResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or parameters",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "No result data available",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/selections": {
            "get": {
                "description": "Retrieves all available betting markets and selections from prematch data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Selections"
                ],
                "summary": "Get available betting selections",
                "responses": {
                    "200": {
                        "description": "List of available selections grouped by market",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AvailableSelection"
                            }
                        }
                    },
                    "404": {
                        "description": "No prematch data available",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AvailableSelection": {
            "description": "Market with available betting options",
            "type": "object",
            "properties": {
                "market": {
                    "type": "string"
                },
                "selections": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "handicap": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "odds": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "models.BetEvaluationRequest": {
            "description": "Request body for evaluating a betting selection",
            "type": "object",
            "properties": {
                "handicap": {
                    "type": "string"
                },
                "market": {
                    "type": "string"
                },
                "score_line": {
                    "description": "Add this for correct score",
                    "type": "string"
                },
                "selection": {
                    "type": "string"
                }
            }
        },
        "models.BetSelection": {
            "description": "Concrete betting selection with all required parameters",
            "type": "object",
            "properties": {
                "handicap": {
                    "type": "string"
                },
                "market": {
                    "type": "string"
                },
                "odds": {
                    "type": "number"
                },
                "score_line": {
                    "type": "string"
                },
                "selection": {
                    "type": "string"
                }
            }
        },
        "models.EvaluationResult": {
            "description": "Result of evaluating a betting selection",
            "type": "object",
            "properties": {
                "actual_result": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "outcome": {
                    "type": "string"
                },
                "selection": {
                    "$ref": "#/definitions/models.BetSelection"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1/",
	Schemes:          []string{},
	Title:            "Betting Evaluation API",
	Description:      "API for evaluating betting selections against match results",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
